<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Static on SteamedFish&#39;s Blog</title>
    <link>https://www.steamedfish.top/tags/static/</link>
    <description>Recent content in Static on SteamedFish&#39;s Blog</description>
    <generator>Hugo -- 0.152.2</generator>
    <language>zh</language>
    <copyright>©2025 SteamedFish&amp;rsquo;s Blog</copyright>
    <lastBuildDate>Sat, 01 Nov 2025 06:14:24 +0000</lastBuildDate>
    <atom:link href="https://www.steamedfish.top/tags/static/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java SE从入门到跑路（五·static与final：静与常的艺术）</title>
      <link>https://www.steamedfish.top/post/java-se-static-final/</link>
      <pubDate>Thu, 30 Oct 2025 07:46:37 +0000</pubDate>
      <guid>https://www.steamedfish.top/post/java-se-static-final/</guid>
      <description>&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;在学完类与对象之后，你已经可以独立地定义自己的世界：
创建对象、设计方法、组织数据。   &lt;br&gt;
但在实际开发中，我们常常会遇到这样的问题：&lt;br&gt;
有些东西不需要属于某个对象，而应该属于整个类；&lt;br&gt;
有些值从头到尾都不该被修改。&lt;/p&gt;
&lt;p&gt;于是，Java 为我们提供了两个关键字——&lt;code&gt;static&lt;/code&gt; 和 &lt;code&gt;final&lt;/code&gt;。 &lt;br&gt;
前者让你在“对象之外”思考，构建&lt;strong&gt;共享与独立&lt;/strong&gt;的概念； &lt;br&gt;
后者让你定义&lt;strong&gt;不变与稳定&lt;/strong&gt;的规则。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
